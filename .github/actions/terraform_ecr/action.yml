name: 'Terraform Action'
description: 'Reusable GitHub Action for Terraform operations'

inputs:
  environment:
    description: 'Environment'
    required: true

outputs:
  ecr-frontend-repo:
    description: 'ECR Frontend Repository URL'
    value: ${{ steps.apply.outputs.ecr-frontend-repo }}
  ecr-backend-repo:
    description: 'ECR Backend Repository URL'
    value: ${{ steps.apply.outputs.ecr-backend-repo }}

runs:
  using: "composite"
  steps:
    - name: Terraform Init
      run: terraform init -backend-config="key=state/${{ inputs.environment }}/terraform.tfstate"
      shell: bash
      working-directory: './infra'

    - name: Terraform Format
      run: terraform fmt
      shell: bash
      working-directory: './infra'

    - name: Download variables file
      run: aws s3 cp s3://dungtt112-tf-backend-bucket/vars/${{ inputs.environment }}/terraform.yaml .
      shell: bash
      working-directory: './infra'

    - name: Terraform Plan
      run: terraform plan -input=false
      shell: bash
      working-directory: './infra'

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false -target="module.ecr"
      shell: bash
      working-directory: './infra'

    - name: Set Outputs
      id: outputs
      run: |
        echo "ecr-frontend-repo=$(terraform output -json ecr_repo | jq -r .ecr_repository_1)" >> $GITHUB_OUTPUT
        echo "ecr-backend-repo=$(terraform output -json ecr_repo | jq -r .ecr_repository_2)" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: './infra'


