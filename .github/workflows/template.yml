name: CI-CD Pipeline

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment (dev, uat, prod)'
        required: true
        type: string
        default: 'dev'
      aws-region:
        description: 'AWS Region'
        required: false
        type: string
        default: 'ap-southeast-2'

    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true

jobs:
  # CI Pipeline
  ci-pipeline:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Test Frontend
      #   uses: ./.github/actions/test_frontend

      # - name: Test Backend
      #   uses: ./.github/actions/test_backend

      - name: Sonar Analysis
        uses: ./.github/actions/sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    #   - name: Configure AWS credentials
    #     uses: aws-actions/configure-aws-credentials@v1
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: ${{ inputs.aws-region }}

    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v1 

    #   - name: Terraform Module ECR
    #     id: ecr-repo
    #     uses: ./.github/actions/terraform_ecr
    #     with:
    #       environment: ${{ inputs.environment }}

    #   - name: Build and Push Frontend Image to ECR
    #     id: frontend-image
    #     uses: ./.github/actions/ecr
    #     with:
    #       ecr-repo: ${{ steps.ecr-repo.outputs.ecr-frontend-repo }}
    #       working-directory: './frontend'

    #   - name: Build and Push Backend Image to ECR
    #     id: backend-image
    #     uses: ./.github/actions/ecr
    #     with:
    #       ecr-repo: ${{ steps.ecr-repo.outputs.ecr-backend-repo }}
    #       working-directory: './backend'

    # outputs:
    #   frontend-image: ${{ steps.frontend-image.outputs.image }}
    #   backend-image: ${{ steps.backend-image.outputs.image }}

  # CD Pipeline 
  # cd-pipeline:
  #   needs: ci-pipeline
  #   runs-on: ubuntu-22.04
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ inputs.aws-region }}

  #     - name: Terraform Module ECS Frontend
  #       uses: ./.github/actions/terraform_ecs
  #       with:
  #         environment: ${{ inputs.environment }}

  #     - name: Deploy Frontend to ECS
  #       uses: ./.github/actions/ecs
  #       with:
  #         image: ${{ needs.ci-pipeline.outputs.ecr-frontend-image }}

  #     - name: Deploy Backend to ECS
  #       uses: ./.github/actions/ecs
  #       with:
  #         image: ${{ needs.ci-pipeline.outputs.ecr-backend-image }}
  #         ecs-service: cicd-lab-backend-service
  #         ecs-cluster: cicd-lab-cluster
  #         ecs-task-definition: cicd-lab-backend-task
  #         container-name: backend-container
